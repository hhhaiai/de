name: Build and Publish Docker Image

on:
  push:
#    branches:
#      - main  # 监听主分支
    tags:
      - 'v*'  # 监听版本标签
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 120  # 设置超时时间

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1  # 最小化检出

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        driver-opts: |
          image=moby/buildkit:latest
        buildkitd-flags: --debug

    # 优化缓存配置
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}},suffix=
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          type=sha,prefix=sha-,format=short

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # 优化缓存策略
        cache-from: |
          type=local,src=/tmp/.buildx-cache
          type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
        cache-to: |
          type=local,dest=/tmp/.buildx-cache-new,mode=max
          type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max
        # 构建优化
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          DOCKER_BUILDKIT=1
        outputs: type=registry
        provenance: false
        push-retry: 2
        max-parallel: 4

    # 缓存更新
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    # 清理构建缓存
    - name: Cleanup
      if: always()
      run: |
        docker builder prune --force --keep-storage=10GB